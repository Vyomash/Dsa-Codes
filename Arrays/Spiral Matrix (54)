class Solution {
public:
    vector<int> spiralOrder(vector<vector<int>>& matrix) {
        vector<int> ans;
        int m=matrix.size();
        int n=matrix[0].size();
        int total=m*n;
        int cnt=0;
        int startingrow=0;
        int endingrow=m-1;
        int startingcol=0;
        int endingcol=n-1;
        while(cnt<total){
            //starting row
            for(int i=startingcol;i<=endingcol && cnt<total;i++){
                ans.push_back(matrix[startingrow][i]);
                cnt++;
            }
            startingrow++;
            //ending col
            for(int i=startingrow;i<=endingrow && cnt<total ;i++){
                ans.push_back(matrix[i][endingcol]);
                cnt++;
            }
            endingcol--;
            //ending row
            for(int i=endingcol;i>=startingcol && cnt<total ;i--){
                ans.push_back(matrix[endingrow][i]);
                cnt++;
            }
            endingrow--;
            //starting col
            for(int i=endingrow;i>=startingrow && cnt<total ;i--){
                ans.push_back(matrix[i][startingcol]);
                cnt++;
            }
            startingcol++;

        }
        return ans;
    }
};
